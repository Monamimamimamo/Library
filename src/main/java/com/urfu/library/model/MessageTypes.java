package com.urfu.library.model;

/**
 * Перечисление типов сообщений, отправляемых пользователям и администраторам.
 * Каждый тип сообщения содержит тему и шаблон, который форматируется с использованием переданных параметров.
 */
public enum MessageTypes {

    RETURNED("Книга возвращена", "Добрый день! Читатель вернул книгу:\n" +
            "Идентификатор книги: %s, \n" +
            "Дата начала резервирования: %s, \n" +
            "Дата конца: %s, \n" +
            "Логин читателя: %s,\n" +
            "Почта читателя: %s"),

    DEADLINE_EXPIRED_ADMIN("Просрочен возврат книги", "Добрый день! Читатель не вернул книгу:\n" +
            "Идентификатор книги: %s, \n" +
            "Дата начала резервирования: %s, \n" +
            "Дата конца: %s, \n" +
            "Логин читателя: %s,\n" +
            "Почта читателя: %s"),

    DEADLINE_EXPIRED_USER("Просрочен возврат книги", "Добрый день! Вы не вернули книгу до окончания срока резервирования:\n" +
            "Идентификатор книги: %s, \n" +
            "Дата начала резервирования: %s, \n" +
            "Дата конца: %s, \n" +
            "Ваш логин: %s\n"),

    NOTIFY("Напоминание о возврате книги", "Добрый день! Напоминаем вам о необходимости сдачи книги в положенный срок, до даты осталось %s:\n" +
            "Идентификатор книги: %s, \n" +
            "Дата начала резервирования: %s, \n" +
            "Дата конца: %s, \n" +
            "Ваш логин: %s\n");

    private final String subject;
    private final String template;

    /**
     * Конструктор с явным указанием всех значений для типа сообщения
     */
    MessageTypes(String subject, String template) {
        this.subject = subject;
        this.template = template;
    }

    public String getSubject() {
        return subject;
    }

    public String formatMessage(Object... args) {
        return String.format(template, args);
    }
}
